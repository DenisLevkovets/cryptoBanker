import base
import telebot
import markups
from starter import start_bot, bot


@bot.message_handler(commands=['start'])
def start(msg):
    chat = msg.chat
    str = bot.send_message(chat.id, "–ü—Ä–∏–≤–µ—Ç, –ú–∏—Ä! –í—ã–±–µ—Ä–∏ —è–∑—ã–∫", reply_markup=markups.language())
    welcome(msg)
    # bot.register_next_step_handler(str,language)
    # name = chat.first_name
    # if msg.from_user.last_name is not None:
    #     name += chat.last_name
    # base.create_user(chat.id, name, chat.username)


# def language(msg):
#     chat = msg.chat
#     bot.send_message(chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫")k
#     markup = telebot.types.ReplyKeyboardMarkup(True, True)
#     markup.row("ok")
#     str=bot.send_message(msg.chat.id, "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É—Å–ª–æ–≤–∏—è", reply_markup=markup)
#     bot.register_next_step_handler(str, welcome)


def welcome(msg):
    bot.send_message(msg.chat.id, "–ß–∞—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∞", reply_markup=markups.addWelcome())
    bot.send_message(msg.chat.id, "–ü—Ä–∏–≤–µ—Ç–∏–∫", reply_markup=markups.welcome())


@bot.callback_query_handler(func=lambda call: call.data == 'currency')
def select_currency(call):
    chat = call.message.chat
    bot.edit_message_text("–í–∞–ª—é—Ç–∞", chat.id, call.message.message_id, reply_markup=markups.currency())


@bot.callback_query_handler(func=lambda call: call.data[:4] == 'ccur')
def currency(call):
    current_currency = call.data[4:]  # –í—ã–±—Ä–∞–Ω–Ω–∞—è –≤–∞–ª—é—Ç–∞
    chat = call.message.chat
    bot.send_message(chat.id, "–û–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –ø—Ä–æ–¥–∞–∂–∏", reply_markup=markups.addWelcome())
    bot.send_message(chat.id, "–ó–¥–µ—Å—å —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –ª—é–¥—å–º–∏", reply_markup=markups.menu())


@bot.callback_query_handler(func=lambda call: call.data == 'backtomenu')
def currency(call):
    chat = call.message.chat
    bot.send_message(chat.id, "–û–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –ø—Ä–æ–¥–∞–∂–∏", reply_markup=markups.addWelcome())
    bot.send_message(chat.id, "–ó–¥–µ—Å—å —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –ª—é–¥—å–º–∏", reply_markup=markups.menu())


@bot.message_handler(regexp="–û–±–º–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")
def exchange(msg):
    bot.send_message(msg.chat.id, "–ö—É–ø–∏—Ç—å/–ü—Ä–æ–¥–∞—Ç—å", reply_markup=markups.exchangeR())
    bot.send_message(msg.chat.id, "–ó–¥–µ—Å—å –≤—ã —Å–æ–≤–µ—Ä—à–∞–µ—Ç–µ —Å–¥–µ–ª–∫–∏ —Å –ª—é–¥—å–º–∏", reply_markup=markups.exchangeI())


@bot.callback_query_handler(func=lambda call: call.data == 'buy')
def buy(call):
    msg = call.message
    bot.edit_message_text("–ü–æ–∫—É–ø–∫–∞ –≤–∞–ª—é—Ç—ã", msg.chat.id, msg.message_id, reply_markup=markups.buyI_sellI())


@bot.callback_query_handler(func=lambda call: call.data == 'monero')
def monero(call):
    msg = call.message
    bot.edit_message_text("–ü–æ–∫—É–ø–∫–∞/–ü—Ä–æ–¥–∞–∂–∞ Monero", msg.chat.id, msg.message_id, reply_markup=markups.payments())


@bot.callback_query_handler(func=lambda call: call.data == 'sell')
def buy(call):
    msg = call.message
    bot.edit_message_text("–ü—Ä–æ–¥–∞–∂–∞ –≤–∞–ª—é—Ç—ã", msg.chat.id, msg.message_id, reply_markup=markups.buyI_sellI())


@bot.message_handler(regexp="–ö–æ—à–µ–ª—ë–∫")
def wallet(msg):
    bot.send_message(msg.chat.id, "–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞", reply_markup=markups.wallet())


@bot.callback_query_handler(func=lambda call: call.data == 'bringin')
def bring_in(call):
    msg = call.message
    bot.edit_message_text("–í—ã–±–µ—Ä–µ—Ç–µ –≤–∞–ª—é—Ç—É –Ω–∞ —Å—á—ë—Ç –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–∏–¥—É—Ç –±–∞–±–æ—Å—ã", msg.chat.id,
                          msg.message_id, reply_markup=markups.bringin())


@bot.callback_query_handler(func=lambda call: call.data[:6] == 'bbring')
def bbring(call):
    msg = call.message
    bot.edit_message_text("–í–Ω–µ—Å–∏—Ç–µ " + call.data[6:], msg.chat.id, msg.message_id)


@bot.callback_query_handler(func=lambda call: call.data == "my requests")
def user_requests(call):
    bot.send_message(call.message.chat.id, "–ï—Å–ª–∏ –Ω—É–∂–Ω–æ,—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏")
    # markup = telebot.types.InlineKeyboardMarkup()
    # data = base.get_user_requests(call.message.chat.id)
    # val = base.get_user_value(call.message.chat.id)
    # if not data:
    #     btn_add = telebot.types.InlineKeyboardButton("üìù –î–æ–±–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ", callback_data='add request')
    #     back = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥",
    #                                               callback_data='exchange')
    #     markup.row(btn_add, back)
    #     bot.edit_message_text("–£ –≤–∞—Å –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π", call.message.chat.id, call.message.message_id)
    #     bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id,
    #                                   reply_markup=markup)
    #
    #
    # else:
    #     for each in data:
    #         btn = telebot.types.InlineKeyboardButton(
    #             text=each.rType + ", " + each.paymentMethod + ", " + each.rate + " " + each.currency,
    #             callback_data=each.currency + "->" + each.rid)
    #         markup.row(btn)
    #     btn_add = telebot.types.InlineKeyboardButton("üìù –î–æ–±–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ", callback_data='add request')
    #     back = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥",
    #                                               callback_data='exchange')
    #     markup.row(btn_add, back)
    #     bot.edit_message_text("–ß—Ç–æ-—Ç–æ —Ç–∞–º –ø—Ä–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è",
    #                           call.message.chat.id, call.message.message_id, parse_mode="markdown")
    #     bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == 'add request')
def add_request(call):
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É", reply_markup=markups.request_curr())


@bot.callback_query_handler(func=lambda call: call.data[:4] == 'rreq')
def req_cur(call):
    cur = call.data[4:]
    msg = call.message
    bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—ä—è–≤–ª–µ–Ω–∏—è", msg.chat.id, msg.message_id, reply_markup=markups.request_type())


@bot.callback_query_handler(func=lambda call: call.data == 'reqsell')
@bot.callback_query_handler(func=lambda call: call.data == 'reqbuy')
def req_buy(call):
    msg = call.message
    ms = bot.send_message(msg.chat.id, "–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã", reply_markup=markups.pay_method())
    bot.register_next_step_handler(ms, rate)


def rate(msg):
    bot.send_message(msg.chat.id, "–ö—É—Ä—Å")


@bot.message_handler(regexp="–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
def settings(msg):
    bot.send_message(msg.chat.id, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", reply_markup=markups.settings())


@bot.callback_query_handler(func=lambda call: call.data == "language")
def lang(call):
    chat = call.message.chat
    bot.send_message(chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫", reply_markup=markups.language())


if __name__ == "__main__":
    start_bot()
